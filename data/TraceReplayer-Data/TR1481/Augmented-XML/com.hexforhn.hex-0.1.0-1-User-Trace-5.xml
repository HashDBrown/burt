<?xml version='1.0' encoding='utf-8'?>
<hierarchy rotation="0"><node bounds="[0,0][1080,1794]" checkable="false" checked="false" class="android.widget.FrameLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][1080,1794]" checkable="false" checked="false" class="android.widget.LinearLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,63][1080,1794]" checkable="false" checked="false" class="android.widget.FrameLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,63][1080,1794]" checkable="false" checked="false" class="android.widget.LinearLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="com.hexforhn.hex:id/action_bar_root" scrollable="false" selected="false" text=""><node bounds="[0,63][1080,1794]" checkable="false" checked="false" class="android.widget.FrameLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="android:id/content" scrollable="false" selected="false" text=""><node bounds="[0,63][1080,1794]" checkable="false" checked="false" class="android.widget.LinearLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,63][1080,336]" checkable="false" checked="false" class="android.widget.LinearLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,63][1080,210]" checkable="false" checked="false" class="android.view.ViewGroup" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="com.hexforhn.hex:id/toolbar" scrollable="false" selected="false" text=""><node bounds="[0,63][147,210]" checkable="false" checked="false" class="android.widget.ImageButton" clickable="true" content-desc="Navigate up" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="['I click navigate up button']" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[157,101][944,172]" checkable="false" checked="false" class="android.widget.TextView" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="I can’t believe that I can prove that it can sort" /><node bounds="[954,63][1080,210]" checkable="false" checked="false" class="android.support.v7.widget.LinearLayoutCompat" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[954,73][1080,199]" checkable="false" checked="false" class="android.widget.TextView" clickable="true" content-desc="Share" enabled="true" focusable="true" focused="false" index="0" long-clickable="true" package="com.hexforhn.hex" password="false" phrases="['I select share', 'I click share']" resource-id="com.hexforhn.hex:id/action_share" scrollable="false" selected="false" text="" /></node></node><node bounds="[0,210][1080,336]" checkable="false" checked="false" class="android.widget.HorizontalScrollView" clickable="false" content-desc="" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="com.hexforhn.hex:id/tabs" scrollable="false" selected="false" text=""><node bounds="[0,210][1080,336]" checkable="false" checked="false" class="android.widget.LinearLayout" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,210][540,336]" checkable="false" checked="false" class="android.support.v7.app.ActionBar$Tab" clickable="true" content-desc="" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="true" text=""><node bounds="[198,247][342,298]" checkable="false" checked="false" class="android.widget.TextView" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="true" text="Article" /></node><node bounds="[540,210][1080,336]" checkable="false" checked="false" class="android.support.v7.app.ActionBar$Tab" clickable="true" content-desc="" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[708,247][912,298]" checkable="false" checked="false" class="android.widget.TextView" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="Comments" /></node></node></node></node><node bounds="[0,336][1080,1794]" checkable="false" checked="false" class="android.support.v4.view.ViewPager" clickable="false" content-desc="" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="com.hexforhn.hex:id/pager" scrollable="true" selected="false" text=""><node bounds="[0,336][1080,1794]" checkable="false" checked="false" class="android.view.ViewGroup" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="com.hexforhn.hex:id/webview_layout" scrollable="false" selected="false" text=""><node bounds="[0,336][1080,1794]" checkable="false" checked="false" class="android.webkit.WebView" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,336][1080,1794]" checkable="false" checked="false" class="android.webkit.WebView" clickable="false" content-desc="I can’t believe that I can prove that it can sort | The AdaCore Blog" enabled="true" focusable="true" focused="true" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="true" selected="false" text=""><node bounds="[0,284][1080,598]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[78,414][811,530]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="AdaCore Blog" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,598][278,703]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="MENU" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,703][1080,850]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="ALL" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,850][1080,997]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="INDUSTRY NEWS &amp; TRENDS" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,997][1080,1144]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="TECHNOLOGY" enabled="true" focusable="true" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,1144][1080,1291]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="PRODUCT NEWS" enabled="true" focusable="true" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,1291][1080,1438]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="OPINION" enabled="true" focusable="true" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,1438][1080,1588]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="LINKEDIN" enabled="true" focusable="true" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,1588][1080,1737]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="TWITTER" enabled="true" focusable="true" focused="false" index="6" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,1737][1080,1794]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="RSS" enabled="true" focusable="true" focused="false" index="7" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[876,606][1002,711]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[913,606][1002,711]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="SEARCH" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[876,619][913,679]" checkable="false" checked="false" class="android.widget.EditText" clickable="true" content-desc="Search" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,714][1080,1794]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,714][1080,1794]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[78,924][1002,1071]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I can’t believe that I can prove that it can sort" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[78,1102][1002,1155]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="by , – Jun 23, 2022" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[152,1105][196,1149]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="by" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[204,1105][433,1149]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Yannick Moy " enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[430,1105][451,1149]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc=", " enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[448,1105][682,1149]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Lionel Matias " enabled="true" focusable="true" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[679,1105][711,1149]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="– " enabled="true" focusable="false" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[708,1105][929,1149]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Jun 23, 2022" enabled="true" focusable="false" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,714][1080,1254]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[78,1422][1002,1771]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Sorting algorithms are to computer science what “Hello World!” is to programming. A way for beginners to get their hands dirty. Which also means that most programmers don’t write “Hello World!” programs past their studies, and computer scientists don’t look at sorting algorithms past their PhD." enabled="true" focusable="false" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Which made it surprising that a new “interesting” sorting algorithm was published at the end of 2021, whose appeal drew attention from both computer scientists and programmers. Here is the algorithm in full details:" enabled="true" focusable="false" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Screenshot-from-2022-06-22-11-25-54" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="As an expert user of Ada, and an anecdotal user of SPARK, one of us (Lionel) took it as a challenge to try some functional proof with SPARK. Despite a hopeful start, this ended up badly. As a SPARK expert thus contacted to help with the challenge, one of us (Yannick) took it as a way to show how functional proof should be approached in SPARK. Including some false starts, this ended up well (and under an hour). This is the story of this challenge, and the tips we think are important to share with those who aim at functional proof with SPARK." enabled="true" focusable="false" focused="false" index="6" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I am Lionel, I’ll start." enabled="true" focusable="false" focused="false" index="7" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="8" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I recently stumbled upon a " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="tweet about a paper on an “unbelievable” sorting algorithm" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc=":" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="9" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Screenshot-from-2022-06-22-11-31-26" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I read the paper intro, and couldn’t realize what was wrong with it instinctively, but quickly seeing all the replies to the tweet brought back memories of learning programming, writing cool (at the time) programs for years, and then later on getting some formal computer science education." enabled="true" focusable="false" focused="false" index="10" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="11" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I dug up my first ever sorting algorithm. I’d used it in a silly 3D renderer that I’d implemented in 2000 on a Pentium 75, all implemented from scratch from what some might call nowadays “first principles” (i.e. I had absolutely no clue what I was doing). In a 3D renderer, once you’ve got your list of triangles to paint, and the direction of the camera set up, you want to z-sort the triangles so you can run the " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Painter algorithm" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc=" (Wikipedia here is very generous, and calls it “depth-sort algorithm”). I needed a sort algorithm and I had no books, just my C compiler, SDL headers and some old French magazines about setting up VESA…" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="12" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="So I built one. I mean I built this one, and to me it looked like it worked. If you look at " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="this video" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc=", it makes sense, somehow, especially for small array sizes, for a beginner that has no notion of smart sorting, big-O notation and no internet. My “unit tests” (generous term again) from the time show how little I understood about testing because they seem to be chosen" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="for " enabled="true" focusable="false" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="this algorithm (to validate this implementation and not sorting in general)." enabled="true" focusable="false" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="13" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I’d put it together without videos and all the" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="fancy" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="visualizations" enabled="true" focusable="true" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="one can use" enabled="true" focusable="true" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc=" when learning sorting algorithms, and I didn’t think about this code for years afterwards." enabled="true" focusable="false" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="When I later learned Ada, first year of formal studies, I needed a sort function for a project and I just ported that algorithm and went with it (and I lived with it until I some month later I had to sort 2 millions entries and after a night at 100% CPU with almost no progress, I caved and cracked my copy of Sedgewick and started learning the science and not just the hacking-stuff-up)." enabled="true" focusable="false" focused="false" index="14" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Paraphrasing the old code, it looked very simple:" enabled="true" focusable="false" focused="false" index="15" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="procedure Stupid_Sort&#10;is&#10;   type A_Type is array (Natural range 1 .. 5) of Natural;&#10;&#10;   procedure Sort (A : in out A_Type)&#10;   is&#10;   begin&#10;      for I in A'Range loop&#10;         for J in A'Range loop&#10;            if A (I) &lt; A (J) then&#10;               declare&#10;                  Tmp : constant Natural := A (I);&#10;               begin&#10;                  A (I) := A (J);&#10;                  A (J) := Tmp;&#10;               end;&#10;           end if;&#10;         end loop;&#10;      end loop;&#10;   end Sort;&#10;&#10;   A : A_Type;&#10;begin&#10;   for I in A'Range loop &#10;     A (I) := A'Last - I + 1;&#10;   end loop;&#10;&#10;   Sort (A);&#10;end Stupid_Sort;" enabled="true" focusable="false" focused="false" index="16" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="17" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Start small (simple small data types, a single subprogram)" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="When I read the tweet and all the replies, I admit I felt compassion for old me (well, young me), even though I saw other people admitting they’d come up with this sorting algorithm once upon a time. I wondered whether applying modern tech (other than having a sorting algorithm in the standard library and knowing about it…) blindly would comfort such a developer in his or her “wrong” version. I decided to launch myself a challenge: proving the algorithm using SPARK, without looking at the proof in the paper. Should be easy enough, right (famous last words)?" enabled="true" focusable="false" focused="false" index="18" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="19" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="gamechanger" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I fired up the ultimate Ada IDE (vim) and just copy-pasted the old code, compiled it (gnatmake -gnatA stupid_sort.adb) and ran it (through gdb to get the content of A after Sort returns). It works, for that input." enabled="true" focusable="false" focused="false" index="20" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Start with a passing test" enabled="true" focusable="false" focused="false" index="21" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="22" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Then I wanted to prove that Sort sorts all possible arrays so I added the SPARK pixie dust:" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="procedure Stupid_Sort with SPARK_Mode =&gt; On" enabled="true" focusable="false" focused="false" index="23" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="and the necessary post-condition for Sort:" enabled="true" focusable="false" focused="false" index="24" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="procedure Sort (A : in out A_Type)&#10;   with Post =&gt; (for all J in A'First .. A'Last - 1 =&gt; A (J) &lt;= A (J + 1))" enabled="true" focusable="false" focused="false" index="25" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Which reads:" enabled="true" focusable="false" focused="false" index="26" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.widget.ListView" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="27" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="['I select one record from the list']" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="when the Sort procedure returns" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="•" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="when the Sort procedure returns" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="for every element A(J) of the array (except the last one)" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="•" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="for every element A(J) of the array (except the last one)" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.widget.ListView" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="['I select one record from the list']" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="the element A(J) is smaller or equal to the next element A(J+1)" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="◦" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="the element A(J) is smaller or equal to the next element A(J+1)" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node></node></node></node></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Then I created a GPR project to run GNATprove:" enabled="true" focusable="false" focused="false" index="28" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="project Stupid_Sort is&#10;&#10;   for Main use (&quot;stupid_sort.adb&quot;);&#10;   for Source_Files use (&quot;stupid_sort.adb&quot;);&#10;&#10;   package Compiler is&#10;      for Switches (&quot;Ada&quot;) use&#10;           (&quot;-gnata&quot;,     -- enable assertions and runtime checks&#10;            &quot;-gnat2022&quot;,  -- for newest forms of expressions in Ada 2022&#10;            &quot;-g&quot;, &quot;-O0&quot;); -- for debugging&#10;    end Compiler;&#10;&#10;end Stupid_Sort;" enabled="true" focusable="false" focused="false" index="29" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="And on I went:" enabled="true" focusable="false" focused="false" index="30" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&gt; gnatprove -Pstupid_sort.gpr -j0&#10;Phase 1 of 2: generation of Global contracts ...&#10;Phase 2 of 2: flow analysis and proof ...&#10;&#10;stupid_sort.adb:6:58: medium: postcondition might fail, cannot prove A (J) &lt;= A (J + 1)&#10;    6 |     with Post =&gt; (for all J in A'First .. A'Last - 1 =&gt; A (J) &lt;= A (J + 1))&#10;      |                                                         ^~~~~~~~~~~~~~~~~" enabled="true" focusable="false" focused="false" index="31" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="32" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Which was kind of expected, but there’s a --level knob, if you’re lazy like me you’ll just try it whenever you find something GNATprove balks at (sadly it only goes to 4, you can’t " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="turn it to eleven" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="… yet):" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&gt; gnatprove -Pstupid_sort.gpr -j0 --level=2&#10;Phase 1 of 2: generation of Global contracts ...&#10;Phase 2 of 2: flow analysis and proof ..." enabled="true" focusable="false" focused="false" index="33" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="And… GNATprove managed to prove the functional correctness of that postcondition!" enabled="true" focusable="false" focused="false" index="34" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use proof automation (and turn up the knob)" enabled="true" focusable="false" focused="false" index="35" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Let’s check the synthesis of what GNATprove did (the gnatprove.out file):" enabled="true" focusable="false" focused="false" index="36" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Summary of SPARK analysis&#10;=========================&#10;&#10;-------------------------------------------------------------------------------------------&#10;SPARK Analysis results        Total       Flow   CodePeer    Provers   Justified   Unproved&#10;-------------------------------------------------------------------------------------------&#10;Data Dependencies                 .          .          .          .           .          .&#10;Flow Dependencies                 .          .          .          .           .          .&#10;Initialization                    1          1          .          .           .          .&#10;Non-Aliasing                      .          .          .          .           .          .&#10;Run-time Checks                   .          .          .          .           .          .&#10;Assertions                        .          .          .          .           .          .&#10;Functional Contracts              1          .          .     1 (Z3)           .          .&#10;LSP Verification                  .          .          .          .           .          .&#10;Termination                       .          .          .          .           .          .&#10;Concurrency                       .          .          .          .           .          .&#10;-------------------------------------------------------------------------------------------&#10;Total                             2    1 (50%)          .    1 (50%)           .          .&#10;&#10;&#10;max steps used for successful proof: 11967&#10;&#10;Analyzed 1 unit&#10;in unit stupid_sort, 2 subprograms and packages out of 2 analyzed&#10;  Stupid_Sort at stupid_sort.adb:1 flow analyzed (0 errors, 0 checks, 0 warnings and 0 pragma Assume statements) and proved (0 checks)&#10;  Stupid_Sort.Sort at stupid_sort.adb:5 flow analyzed (0 errors, 0 checks, 0 warnings and 0 pragma Assume statements) and proved (1 checks)" enabled="true" focusable="false" focused="false" index="37" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Here GNATprove tells us it managed to prove our postcondition (a functional contract) with Z3. So it works! SPARK can prove the algorithm! Victory? Not so fast." enabled="true" focusable="false" focused="false" index="38" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Let’s try to go for larger array sizes, e.g. 1 .. 10. Now after 16 seconds, GNATprove goes back to:" enabled="true" focusable="false" focused="false" index="39" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="stupid_sort.adb:6:58: medium: postcondition might fail, cannot prove A (J) &lt;= A (J + 1)&#10;    6 |     with Post =&gt; (for all J in A'First .. A'Last - 1 =&gt; A (J) &lt;= A (J + 1))&#10;      |                                                         ^~~~~~~~~~~~~~~~~" enabled="true" focusable="false" focused="false" index="40" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Turning the level up to the max (--level=4) doesn’t get us better results, but takes more than 3 minutes, for the same result. So back to square one." enabled="true" focusable="false" focused="false" index="41" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="The first reflex I had (wrongly) ingrained was to try and state obvious things through assertions. Keep in mind I didn’t want to read the paper, with the many juicy proofs and insights it might contain. So there I went:" enabled="true" focusable="false" focused="false" index="42" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="First I put the swap code in its own procedure:" enabled="true" focusable="false" focused="false" index="43" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="procedure Swap (A : in out A_Type; I : A_Index_Type; J : A_Index_Type)&#10;  with Post =&gt; A (J) = A'Old (I) and A (I) = A'Old (J)&#10;is&#10;   Tmp : constant Natural := A (I);&#10;begin&#10;   A (I) := A (J);&#10;   A (J) := Tmp;&#10;end Swap;" enabled="true" focusable="false" focused="false" index="44" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="… which (spoiler) wasn’t a very good idea (see “framing conditions”, later). I didn’t get better results, so I went on adding assertions." enabled="true" focusable="false" focused="false" index="45" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="At some point I ended up with lots of tautological asserts, and it felt more and more like I really didn’t understand what the problem was." enabled="true" focusable="false" focused="false" index="46" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="if A (I) &lt; A (J) then&#10;   pragma Assert (A (I) &lt; A (J)); -- *that* should always be true, right?&#10;   Swap (A, I, J);&#10;   pragma Assert (A (I) &gt;= A (J)); -- *that* too, no?&#10;end if;&#10;pragma Assert (A (I) &gt;= A (J)); -- doubting everything…" enabled="true" focusable="false" focused="false" index="47" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="And still, no progress on the proof of the postcondition." enabled="true" focusable="false" focused="false" index="48" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Avoid the Assertocalypse" enabled="true" focusable="false" focused="false" index="49" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="The message from GNATprove was hinting at a Loop_Invariant:" enabled="true" focusable="false" focused="false" index="50" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="stupid_sort.adb:22:14: medium: postcondition might fail&#10;   22 |     Post =&gt; Sorted (A, A'First, A'Last)&#10;      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~&#10;  possible fix: loop at line 25 should mention A in a loop invariant&#10;   25 |      for I in A'range loop&#10;      |                       ^ here" enabled="true" focusable="false" focused="false" index="51" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="So I looked at the videos of the sort again, and came up with two (very wrong) loop invariants:" enabled="true" focusable="false" focused="false" index="52" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Loop_Invariant (if I &gt; A'First then A (I) &gt;= A (A'First));&#10;pragma Loop_Invariant (for all K in A'First .. I - 1 =&gt; A(I) &gt;= A(K));" enabled="true" focusable="false" focused="false" index="53" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="This made GNATprove very mad:" enabled="true" focusable="false" focused="false" index="54" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="stupid_sort.adb:16:59: medium: postcondition might fail, cannot prove A (J) &lt;= A (J + 1)&#10;   16 |      with Post =&gt; (for all J in A'First .. A'Last - 1 =&gt; A (J) &lt;= A (J + 1))&#10;      |                                                          ^~~~~~~~~~~~~~~~~&#10;&#10;stupid_sort.adb:28:53: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove A (I) &gt;= A (A'first)&#10;   28 |         pragma Loop_Invariant (if I &gt; A'First then A (I) &gt;= A (A'First));&#10;      |                                                    ^~~~~~~~~~~~~~~~~~~&#10;&#10;stupid_sort.adb:29:66: medium: loop invariant might fail in first iteration, cannot prove A(I) &gt;= A(K)&#10;   29 |         pragma Loop_Invariant (for all K in A'First .. I - 1 =&gt; A(I) &gt;= A(K));&#10;      |                                                                 ^~~~~~~~~~~&#10;&#10;stupid_sort.adb:29:66: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove A(I) &gt;= A(K)&#10;   29 |         pragma Loop_Invariant (for all K in A'First .. I - 1 =&gt; A(I) &gt;= A(K));" enabled="true" focusable="false" focused="false" index="55" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Understand tool messages" enabled="true" focusable="false" focused="false" index="56" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="That’s when I decided to call up my local SPARK friend Yannick, to teach me about loop invariants, and how you prove such an algorithm with SPARK." enabled="true" focusable="false" focused="false" index="57" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Have an expert on call" enabled="true" focusable="false" focused="false" index="58" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I am Yannick, I’ll jump in." enabled="true" focusable="false" focused="false" index="59" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Let’s return first to the addition of the Swap procedure in Lionel’s code. Remember the postcondition he wrote for Swap:" enabled="true" focusable="false" focused="false" index="60" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="procedure Swap (A : in out A_Type; I : A_Index_Type; J : A_Index_Type)&#10;   with Post =&gt; A (J) = A'Old (I) and A (I) = A'Old (J)" enabled="true" focusable="false" focused="false" index="61" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="That’s true, but not sufficient. Indeed, all the provers know about variable A after a call to Swap (since this parameter is modified in Swap) is what the postcondition of Swap says about it. And… it says nothing about all the values of A outside of indexes I and J! So there is no chance that GNATprove will be able to prove our sorting code." enabled="true" focusable="false" focused="false" index="62" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="63" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="This need to identify what has changed during a call with enough precision is known as the" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="frame condition" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc=", and it’s a typical beginner’s mistake to forget it. Here, a suitable postcondition would be:" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="procedure Swap (A : in out A_Type; I : A_Index_Type; J : A_Index_Type)&#10;   with Post =&gt; A = (A’Old with delta I =&gt; A(J)’Old, J =&gt; A(I)’Old)" enabled="true" focusable="false" focused="false" index="64" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="which states exactly the content of A after a call to Swap." enabled="true" focusable="false" focused="false" index="65" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Beware the frame condition" enabled="true" focusable="false" focused="false" index="66" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Ironically, you get the same result if you don’t specify a postcondition at all on Swap, because GNATprove will inline the call in that case! Inlining of calls and unrolling of loops are powerful techniques for automating the proof of programs, without the need for a user to specify contracts and loop invariants. But as usual with automation, the risk is that, when the situation gets more complex, automation fails and the user is left with a complex situation that she does not understand (a.k.a. the curse of automation). Loop unrolling explains why Lionel was initially &quot;feeling lucky!&quot; with Z3 proving the postcondition of Sort for small array sizes, without having to write loop invariants. But the curse of automation stroke back when increasing the array size, as the loops are not unrolled anymore, or the unrolling leads to unmanageable formulas for automatic provers." enabled="true" focusable="false" focused="false" index="67" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="68" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="One way to remain aware of the choices in terms of automation made by GNATprove is to use the switch --info which outputs such information:" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="stupid_sort.adb:11:14: info: local subprogram &quot;Sort&quot; only analyzed in the context of calls&#10;  add a contract to analyze it separately from calling contexts&#10;stupid_sort.adb:33:21: info: unrolling loop&#10;stupid_sort.adb:39:04: info: analyzing call to &quot;Sort&quot; in context&#10;stupid_sort.adb:39:04: info: in inlined body at line 18&#10;  unrolling loop&#10;stupid_sort.adb:38:04: info: in inlined body at line 17&#10;  unrolling loop" enabled="true" focusable="false" focused="false" index="69" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use the right tool configuration (and switches!)" enabled="true" focusable="false" focused="false" index="70" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Contrary to the heroic (masochistic?) Lionel, I did not aim at rediscovering how the algorithm worked by looking at the code. Instead, I took the time to read the short article, and to convince myself that I understood why it worked." enabled="true" focusable="false" focused="false" index="71" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Understand the code that you want to prove" enabled="true" focusable="false" focused="false" index="72" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Well, at least I thought I understood the algorithm. More on that later." enabled="true" focusable="false" focused="false" index="73" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I started by defining suitable types for the index of the array, one being slightly larger than the other, in order to accommodate empty ranges of values (when we start the iteration):" enabled="true" focusable="false" focused="false" index="74" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="type I_Type_Base is new Integer range 0 .. 5;&#10;subtype I_Type is I_Type_Base range 1 .. I_Type_Base'Last;&#10;type A_Type is array (I_Type) of Natural;" enabled="true" focusable="false" focused="false" index="75" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Define suitable types with the tightest constraints" enabled="true" focusable="false" focused="false" index="76" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Types are the best specifications, because you get their properties everywhere a value of the type is used, without having to repeat the properties in assertions, preconditions, etc." enabled="true" focusable="false" focused="false" index="77" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Then, I defined expression functions for the important properties used in the article: that the array over a given range is sorted, and that the maximum of the array over a given range is at a given index." enabled="true" focusable="false" focused="false" index="78" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="function Sorted (A : A_Type; From : I_Type; To : I_Type_Base) return Boolean &#10;is&#10;   (for all I in From .. To =&gt;&#10;      (for all J in I .. To =&gt;&#10;         A(I) &lt;= A(J)));&#10;&#10;function Is_Max (M : I_Type; A, From, To : I_Type) return Boolean &#10;is&#10;  (for all I in From .. To =&gt; A (I) &lt;= A (M))&#10;with&#10;  Pre =&gt; M in From .. To;" enabled="true" focusable="false" focused="false" index="79" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Define suitable expression functions for important properties" enabled="true" focusable="false" focused="false" index="80" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="In general, it’s better to give a name to important properties that will be used multiple times in specifications, assertions and ghost code, because it makes the specification and proof more readable, and because it can help automatic provers. Here, it’s all the more helpful for automatic provers because it isolates quantifiers “for all”." enabled="true" focusable="false" focused="false" index="81" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="The form of these properties is also quite important. Instead of using the natural expression of sortedness as “every element is less or equal to the next”, I have expressed it as the equivalent transitive closure of this property, that is, “every element is less or equal to every element that follows”. That makes a big difference for automatic provers, as establishing the latter from the former requires inductive reasoning, which automatic provers are poor at, while the former is immediately deduced from the latter." enabled="true" focusable="false" focused="false" index="82" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Similarly, I could have defined Is_Max as a function that takes as input the maximum Max of the array over a given range, instead of the index M of the maximum, and computes the conjunction:" enabled="true" focusable="false" focused="false" index="83" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="(for all I in From .. To =&gt; A (I) &lt;= Max)&#10;   and then&#10;(for some M in From .. To =&gt; Max = A (M))" enabled="true" focusable="false" focused="false" index="84" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="But this uses an existential quantification “for some” which is hard to establish for automatic provers, as this requires exhibiting the “witness” index M here. So I went for the definition that did not require an existential quantification, by passing the index M as parameter instead." enabled="true" focusable="false" focused="false" index="85" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use idiomatic definitions of properties that help automatic provers" enabled="true" focusable="false" focused="false" index="86" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="With these definitions, the loop invariant of the external loop can be expressed very easily, based on the properties of that loop described in the article:" enabled="true" focusable="false" focused="false" index="87" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Loop_Invariant (Sorted (A, A'First, I));&#10;pragma Loop_Invariant (Is_Max (I, A, A'First, A'Last));" enabled="true" focusable="false" focused="false" index="88" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="It gets a bit trickier for the internal loop, as the explanations in the article in terms of values of K before and after I cannot be directly translated into loop invariants. Plus the article talks of going from index I to index I+1 while the code goes from index I-1 and index I (when expressing the loop invariant). That’s where I tried out various loop invariants in my head, with the support of pen-and-paper to understand how the algorithm really worked. And it went 💡 the array stayed sorted at every iteration of the internal loop for all indexes lower than I!" enabled="true" focusable="false" focused="false" index="89" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Loop_Invariant (Sorted (A, A'First, I));" enabled="true" focusable="false" focused="false" index="90" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="And during the internal loop, the maximum value over the whole array was either located at index I-1 (at the beginning of the iteration) or at index I (after getting to iteration J = I-1):" enabled="true" focusable="false" focused="false" index="91" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Loop_Invariant&#10;   (declare&#10;       M : constant I_Type := (if J &lt; I then I-1 else I);&#10;    begin&#10;       Is_Max (M, A, A'First, A'Last));" enabled="true" focusable="false" focused="false" index="92" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use pen-and-paper to really understand the code that you want to prove" enabled="true" focusable="false" focused="false" index="93" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="It’s all too easy to “understand” that something works by going through the steps of an explanation/demonstration (like in the article), without being able to really understand why it works. Proof requires us to understand why it works." enabled="true" focusable="false" focused="false" index="94" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="As GNATprove could not prove the loop invariant of the inner loop, even at level 4 (all provers get called at that level, with a substantial timeout of 60 seconds per check), I tried running the program through its test with assertions enabled, and… the loop invariant failed at runtime! No wonder GNATprove could not prove it." enabled="true" focusable="false" focused="false" index="95" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Execute assertions during tests to help debug them" enabled="true" focusable="false" focused="false" index="96" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Just looking at the failing loop invariant, I realized that it could not be true during the first iteration of the loop, where we have not yet identified the maximum value of the array. So I added a special case for I=A’First:" enabled="true" focusable="false" focused="false" index="97" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Loop_Invariant&#10;  (if I = A'First then&#10;     Is_Max (I, A, A'First, J)&#10;   else&#10;      (declare&#10;          M : constant I_Type := (if J &lt; I then I-1 else I);&#10;       begin&#10;          Is_Max (M, A, A'First, A'Last)));" enabled="true" focusable="false" focused="false" index="98" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="But the test was still failing at runtime! This time, I ran the test in the debugger (gdb inside GNAT Studio), to display values of all variables when hitting the failing loop invariant. That was a case of off-by-one error, the test “J &lt; I” in the definition of constant M should be “J &lt; I-1”. With that, the test was running without error." enabled="true" focusable="false" focused="false" index="99" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Debug failing assertions by running tests with assertions in the debugger" enabled="true" focusable="false" focused="false" index="100" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="I reran GNATprove on the code. It reported cases of runtime errors when calling functions Sorted/Is_Max, which I fixed. But GNATprove could still not prove the loop invariant of the internal loop stating that A remained sorted from A’First to I-1. I read again the explanations in the article, which confirmed that it was true. Yet it was not proved. So I looked at the code, to see how the loop invariant at iteration J can be deduced from the loop invariant at iteration J-1 and the execution of the current iteration. And it was not provable! Because we were missing the information that, up to value J=I-1, the value at index I is greater than all values seen so far:" enabled="true" focusable="false" focused="false" index="101" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Loop_Invariant&#10;   (if J &lt; I then&#10;      (for all K in A'First .. J =&gt; A(K) &lt;= A(I)));" enabled="true" focusable="false" focused="false" index="102" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Now, GNATprove proves the code easily (at level 2)." enabled="true" focusable="false" focused="false" index="103" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Debug failing loop invariants by reasoning inductively, from one iteration to the next" enabled="true" focusable="false" focused="false" index="104" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="All that remained was to generalize the array index type to range over all positive integers instead of the range 1..5, and to allow unconstrained arrays whose length is not known statically:" enabled="true" focusable="false" focused="false" index="105" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="type I_Type_Base is new Integer range 0 .. Integer'Last;&#10;subtype I_Type is I_Type_Base range 1 .. I_Type_Base'Last;&#10;type A_Type is array (I_Type range &lt;&gt;) of Natural;" enabled="true" focusable="false" focused="false" index="106" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Because we’ve used so far relative attributes A’First/A’Last instead of the equivalent magic numbers 0/5, the adjustments needed are minimal." enabled="true" focusable="false" focused="false" index="107" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use language features to facilitate the generalization of assertions and ghost code" enabled="true" focusable="false" focused="false" index="108" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="By reviewing the final code, I realized that the last loop invariant could be written without quantification, as we already get that the array is sorted up to index I-1:" enabled="true" focusable="false" focused="false" index="109" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Loop_Invariant (if J &lt; I then A(J) &lt;= A(I));" enabled="true" focusable="false" focused="false" index="110" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Simplify ghost code once the program is proved" enabled="true" focusable="false" focused="false" index="111" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="That concludes with the functional proof of this program." enabled="true" focusable="false" focused="false" index="112" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="113" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Or does it? We have not proved here that the result of sorting is a shuffling of the entry. This is " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="doable" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc=" with SPARK, but just… not easy. In 99.9% of the cases, in practice you’d stop here because:" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.widget.ListView" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="114" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="['I select one record from the list']" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="It is obvious from looking at the code to see that the result is a shuffling of the entry, as A is only modified by swapping two of its elements. So this can be verified by review easily." enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="•" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="It is obvious from looking at the code to see that the result is a shuffling of the entry, as A is only modified by swapping two of its elements. So this can be verified by review easily." enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="Doing it by proof brings not much more assurance than the review, but a high cost both for the initial proof and for maintenance of the contracts and lemmas as the code or the tools evolve." enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="•" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Doing it by proof brings not much more assurance than the review, but a high cost both for the initial proof and for maintenance of the contracts and lemmas as the code or the tools evolve." enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node></node></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Don’t prove what you don’t need to prove" enabled="true" focusable="false" focused="false" index="115" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="To recap, we saw 18 tips that could greatly facilitate your use of proof with SPARK (or any similar program proof environment):" enabled="true" focusable="false" focused="false" index="116" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="117" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Start small (simple small data types, a single subprogram)" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Start with a passing test" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use proof automation (and turn up the knob)" enabled="true" focusable="false" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Avoid the Assertocalypse" enabled="true" focusable="false" focused="false" index="6" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="7" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Understand tool messages" enabled="true" focusable="false" focused="false" index="8" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="9" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Have an expert on call" enabled="true" focusable="false" focused="false" index="10" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="11" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Beware the frame condition" enabled="true" focusable="false" focused="false" index="12" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="13" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use the right tool configuration (and switches!) " enabled="true" focusable="false" focused="false" index="14" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="15" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Understand the code that you want to prove" enabled="true" focusable="false" focused="false" index="16" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="17" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Define suitable types with the tightest constraints" enabled="true" focusable="false" focused="false" index="18" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="19" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Define suitable expression functions for important properties" enabled="true" focusable="false" focused="false" index="20" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="21" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use pen-and-paper to really understand the code that you want to prove" enabled="true" focusable="false" focused="false" index="22" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="23" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Execute assertions during tests to help debug them" enabled="true" focusable="false" focused="false" index="24" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="25" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Debug failing assertions by running tests with assertions in the debugger" enabled="true" focusable="false" focused="false" index="26" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="27" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Debug failing loop invariants by reasoning inductively, from one iteration to the next" enabled="true" focusable="false" focused="false" index="28" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="29" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Use language features to facilitate the generalization of assertions and ghost code" enabled="true" focusable="false" focused="false" index="30" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="31" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Simplify ghost code once the program is proved " enabled="true" focusable="false" focused="false" index="32" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="33" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Tip: Don’t prove what you don’t need to prove" enabled="true" focusable="false" focused="false" index="34" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="118" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Here is the final code for our version of the Stupid Sort algorithm:" enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="pragma Ada_2022;&#10;&#10;procedure Stupid_Sort with SPARK_Mode =&gt; On&#10;is&#10;   type I_Type_Base is new Integer range 0 .. Integer'Last;&#10;   subtype I_Type is I_Type_Base range 1 .. I_Type_Base'Last;&#10;   type A_Type is array (I_Type range &lt;&gt;) of Natural;&#10;&#10;   function Sorted (A : A_Type; From, To : I_Type_Base) return Boolean is&#10;      (for all I in From .. To =&gt;&#10;         (for all J in I .. To =&gt;&#10;            A(I) &lt;= A(J)))&#10;   with&#10;     Pre =&gt; From in A'Range&#10;       and then To &lt;= A'Last;&#10;&#10;   function Is_Max (M : I_Type; A : A_Type; From, To : I_Type_Base) return Boolean is&#10;     (for all I in From .. To =&gt; A (I) &lt;= A (M))&#10;   with&#10;     Pre =&gt; M in From .. To&#10;       and then From in A'Range&#10;       and then To in A'Range;&#10;&#10;   procedure Sort (A : in out A_Type)&#10;   with&#10;     Post =&gt; (if A'Length &gt; 0 then Sorted (A, A'First, A'Last))&#10;   is&#10;   begin&#10;      for I in A'range loop&#10;         for J in A'range loop&#10;            if A(I) &lt; A(J) then&#10;               declare&#10;                  Tmp : constant Natural := A(I);&#10;               begin&#10;                  A (I) := A (J);&#10;                  A (J) := Tmp;&#10;               end;&#10;            end if;&#10;&#10;            pragma Loop_Invariant (if J &lt; I then A(J) &lt;= A(I));&#10;            pragma Loop_Invariant (Sorted (A, A'First, I-1));&#10;            pragma Loop_Invariant&#10;              (if I = A'First then&#10;                Is_Max (I, A, A'First, J)&#10;              else&#10;                (declare&#10;                   M : constant I_Type := (if J &lt; I-1 then I-1 else I);&#10;                 begin&#10;                   Is_Max (M, A, A'First, A'Last)));&#10;         end loop;&#10;&#10;         pragma Loop_Invariant (Sorted (A, A'First, I));&#10;         pragma Loop_Invariant (Is_Max (I, A, A'First, A'Last));&#10;      end loop;&#10;   end Sort;&#10;&#10;   A : A_Type (1 .. 1000);&#10;begin&#10;   for I in A'Range loop&#10;     A (I) := Integer (A'Last - I + 1);&#10;   end loop;&#10;&#10;   Sort (A);&#10;end Stupid_Sort;" enabled="true" focusable="false" focused="false" index="119" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="120" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Posted in " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="#SPARK" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="#Proof" enabled="true" focusable="true" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="#Algorithms" enabled="true" focusable="true" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="   " enabled="true" focusable="false" focused="false" index="6" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="About " enabled="true" focusable="false" focused="false" index="121" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="About " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Yannick Moy" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.widget.Image" clickable="true" content-desc="Yannick Moy" enabled="true" focusable="false" focused="false" index="122" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="123" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Yannick Moy is Static Analysis Lead at AdaCore. Yannick leads the development of SPARK, a software source code analyzer aiming at verifying safety/security properties of programs. He frequently talks about SPARK in articles, conferences, classes and blogs (in particular " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="blog.adacore.com" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="). Yannick previously worked on source code analyzers for PolySpace (now The MathWorks) and at Université Paris-Sud." enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="About " enabled="true" focusable="false" focused="false" index="124" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="About " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Lionel Matias" enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Lionel's been a real-time software engineer for over 10 years, working on real-time safety-critical systems. Fan of everything Ada, he's a believer in the bright future of SPARK and that the technology to build safe software should be in the hands of everyone. He's been experimenting in the recent years with automated testing, static analysis and proof technology, and his new motto is &quot;just use my cycles !&quot;." enabled="true" focusable="false" focused="false" index="125" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="126" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Please enable JavaScript to view the " enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="comments powered by Disqus." enabled="true" focusable="true" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node></node></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="AdaCore provides tools and expertise for safe, secure, and high-reliability software development." enabled="true" focusable="false" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Home" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Products" enabled="true" focusable="true" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Developers" enabled="true" focusable="true" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="   " enabled="true" focusable="false" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Training" enabled="true" focusable="true" focused="false" index="6" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="7" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Customers" enabled="true" focusable="true" focused="false" index="8" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="9" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Ada Answers" enabled="true" focusable="true" focused="false" index="10" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="11" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Academia" enabled="true" focusable="true" focused="false" index="12" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="    " enabled="true" focusable="false" focused="false" index="13" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Support" enabled="true" focusable="true" focused="false" index="14" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text=""><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="linkedin" enabled="true" focusable="true" focused="false" index="0" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="   " enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="twitter" enabled="true" focusable="true" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="   " enabled="true" focusable="false" focused="false" index="3" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="github" enabled="true" focusable="true" focused="false" index="4" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="   " enabled="true" focusable="false" focused="false" index="5" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="rss" enabled="true" focusable="true" focused="false" index="6" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="7" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="&#10;" enabled="true" focusable="false" focused="false" index="8" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Copyright © 2022 AdaCore. All Rights Reserved        " enabled="true" focusable="false" focused="false" index="9" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Legal" enabled="true" focusable="true" focused="false" index="10" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="   |  " enabled="true" focusable="false" focused="false" index="11" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Privacy Policy" enabled="true" focusable="true" focused="false" index="12" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="   |  " enabled="true" focusable="false" focused="false" index="13" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="true" content-desc="Code of Conduct" enabled="true" focusable="true" focused="false" index="14" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="" scrollable="false" selected="false" text="" /></node></node></node></node></node></node></node></node></node></node></node><node bounds="[0,0][1080,63]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="1" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="android:id/statusBarBackground" scrollable="false" selected="false" text="" /><node bounds="[0,0][0,0]" checkable="false" checked="false" class="android.view.View" clickable="false" content-desc="" enabled="true" focusable="false" focused="false" index="2" long-clickable="false" package="com.hexforhn.hex" password="false" phrases="[]" resource-id="android:id/navigationBarBackground" scrollable="false" selected="false" text="" /></node></hierarchy>